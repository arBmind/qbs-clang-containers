ARG DISTRO=focal
ARG CLANG_MAJOR=12
ARG QT_MAJOR=62
ARG QT_VERSION=6.2.2
ARG QT_ABI=gcc_64
# Qbs requires qt5compat to be built with Qt6
ARG QT_MODULES="qt5compat"
ARG QBS_BRANCH=v1.21.0
ARG QBS_QMAKE_ARGS="-spec linux-clang"
# ARG QBS_QMAKE_ARGS="-spec linux-clang-libc++ LIBS+=-lc++abi" # requires qt built with libc++ after Qt6
ARG RUNTIME_APT="libicu66 libgssapi-krb5-2 libpcre2-16-0"

FROM ubuntu:${DISTRO} AS clang_base
ARG DISTRO
ARG CLANG_MAJOR

ENV \
  APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 \
  DEBIAN_FRONTEND=noninteractive \
  LANG=C.UTF-8 \
  LC_ALL=C.UTF-8

# install Clang (https://apt.llvm.org/)
RUN apt-get update --quiet \
  && apt-get upgrade --yes --quiet \
  && apt-get install --yes --quiet --no-install-recommends \
    libglib2.0-0 \
    wget \
    gnupg \
    apt-transport-https \
    ca-certificates \
  && wget -qO - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \
  && echo "deb http://apt.llvm.org/${DISTRO}/ llvm-toolchain-${DISTRO}-${CLANG_MAJOR} main" > /etc/apt/sources.list.d/llvm.list \
  && apt-get update --quiet \
  && apt-get install --yes --quiet --no-install-recommends \
    clang-${CLANG_MAJOR} \
    lld-${CLANG_MAJOR} \
    libc++abi-${CLANG_MAJOR}-dev \
    libc++-${CLANG_MAJOR}-dev \
    $( [ $CLANG_MAJOR -ge 12 ] && echo "libunwind-${CLANG_MAJOR}-dev" ) \
  && update-alternatives --install /usr/bin/cc cc /usr/bin/clang-${CLANG_MAJOR} 100 \
  && update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-${CLANG_MAJOR} 100 \
  && update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${CLANG_MAJOR} 100 \
  && update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${CLANG_MAJOR} 100 \
  && update-alternatives --install /usr/bin/ld ld /usr/bin/ld.lld-${CLANG_MAJOR} 10 \
  && update-alternatives --install /usr/bin/ld ld /usr/bin/ld.gold 20 \
  && update-alternatives --install /usr/bin/ld ld /usr/bin/ld.bfd 30 \
  && c++ --version \
  && apt-get --yes autoremove \
  && apt-get clean autoclean \
  && rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*

# compile & install Qbs
FROM clang_base AS qbs-build
ARG DISTRO
ARG QT_VERSION
ARG QT_ABI
ARG QT_MODULES
ARG QBS_BRANCH
ARG QBS_QMAKE_ARGS

ENV \
  QTDIR=/opt/qt/${QT_VERSION}/${QT_ABI} \
  PATH=/opt/qt/${QT_VERSION}/${QT_ABI}/bin:/opt/qbs/bin:${PATH} \
  LD_LIBRARY_PATH=/opt/qt/${QT_VERSION}/${QT_ABI}/lib:${LD_LIBRARY_PATH}

RUN \
  apt-get update --quiet \
  && apt-get install --yes --quiet --no-install-recommends \
    git \
    make \
    libdbus-1-dev \
    libfontconfig1-dev \
    libfreetype6-dev \
    libxkbcommon-x11-dev \
    libgl1-mesa-dev \
    pip \
    p7zip \
  && pip install -U pip \
  && pip install aqtinstall \
  && aqt install-qt --outputdir /opt/qt linux desktop ${QT_VERSION} ${QT_ABI} --modules ${QT_MODULES} --external $(which 7zr) \
  && apt-get --yes autoremove \
  && apt-get clean autoclean \
  && rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*

RUN \
  cd /opt \
  && git clone --recurse-submodules --depth 1 -b ${QBS_BRANCH} https://github.com/qbs/qbs.git qbs-src \
  && cd /opt/qbs-src \
  && qmake -r qbs.pro ${QBS_QMAKE_ARGS} \
    QBS_INSTALL_PREFIX=/opt/qbs \
    CONFIG+=nomake_tests \
    CONFIG+=qbs_no_dev_install \
    CONFIG+=release CONFIG-=debug \
  && make \
  && make install \
  && rm -rf /opt/qbs-src

# final qbs-clang (no Qt)
FROM clang_base AS qbs-clang
ARG DISTRO
ARG CLANG_MAJOR
ARG QT_VERSION
ARG QT_ABI
ARG QBS_BRANCH
ARG RUNTIME_APT

LABEL Description="Ubuntu ${DISTRO} - Clang${CLANG_MAJOR} + Qbs ${QBS_BRANCH}"

COPY --from=qbs-build /opt/qbs /opt/qbs
COPY --from=qbs-build /opt/qt/${QT_VERSION}/${QT_ABI}/bin /opt/qt/${QT_VERSION}/${QT_ABI}/bin
COPY --from=qbs-build /opt/qt/${QT_VERSION}/${QT_ABI}/lib /opt/qt/${QT_VERSION}/${QT_ABI}/lib
ENV \
  PATH=/opt/qbs/bin:${PATH} \
  LD_LIBRARY_PATH=/opt/qt/${QT_VERSION}/${QT_ABI}/lib:${LD_LIBRARY_PATH}

RUN apt-get update --quiet \
  && apt-get install --yes --quiet --no-install-recommends \
  ${RUNTIME_APT} \
  && apt-get --yes autoremove \
  && apt-get clean autoclean \
  && rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* \
  && qbs setup-toolchains --type clang /usr/bin/clang++ clang \
  && qbs config defaultProfile clang \
  && qbs config --list

WORKDIR /build
ENTRYPOINT ["/opt/qbs/bin/qbs"]

# final qbs-clang-qt (with Qt)
FROM clang_base AS qbs-clang-qt
ARG DISTRO
ARG CLANG_MAJOR
ARG QT_MAJOR
ARG QT_VERSION
ARG QT_ABI
ARG QBS_BRANCH
ARG RUNTIME_APT

LABEL Description="Ubuntu ${DISTRO} - Clang${CLANG_MAJOR} + Qt ${QT_VERSION} + Qbs ${QBS_BRANCH}"

COPY --from=qbs-build /opt/qbs /opt/qbs
COPY --from=qbs-build /opt/qt/${QT_VERSION}/${QT_ABI} /opt/qt/${QT_VERSION}/${QT_ABI}
ENV \
  QTDIR=/opt/qt/${QT_VERSION}/${QT_ABI} \
  PATH=/opt/qt/${QT_VERSION}/${QT_ABI}/bin:/opt/qbs/bin:${PATH} \
  LD_LIBRARY_PATH=/opt/qt/${QT_VERSION}/${QT_ABI}/lib:${LD_LIBRARY_PATH}

RUN apt-get update --quiet \
  && apt-get install --yes --quiet --no-install-recommends \
    ${RUNTIME_APT} \
  && apt-get --yes autoremove \
  && apt-get clean autoclean \
  && rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* \
  && qbs setup-toolchains --detect \
  && qbs setup-qt /opt/qt/${QT_VERSION}/${QT_ABI}/bin/qmake qt${QT_MAJOR} \
  && qbs config defaultProfile qt${QT_MAJOR} \
  && qbs config --list

WORKDIR /build
ENTRYPOINT ["/opt/qbs/bin/qbs"]
